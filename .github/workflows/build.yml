# Workflow의 이름을 지정
name: BackEnd - CI/CD - build

on:
  pull_request:
    # main branch, develop branch에 pr 할경우 동작합니다.
    branches: [ "main", "develop" ]
  push:
    # develop branch에 push 하면 동작합니다.
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: build

    steps:
      - uses: actions/checkout@v3
      # JDK를 21 버전으로 셋팅
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Gradle을 캐싱 -> 빌드 속도가 증가하는 효과
      - name: Gradle 캐싱
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 프로젝트 저장소에 업로드하면 안되는 설정 파일들을 생성
      - name: Make application.properties
        run: |
          cd ./src/main
          mkdir resources
          cd ./resources
          touch ./application.properties
          echo "$APPLICATION" > ./application.properties
        env:
          APPLICATION: ${{ secrets.APPLICATION }}
        shell: bash

      - name: Gradle 권한 부여
        run: chmod +x gradlew

      - name: Gradle로 빌드 실행
        run: ./gradlew bootjar